# Generated by Django 4.2.5 on 2023-10-09 15:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import launchbox.content.models.mediafile
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'name',
                    models.CharField(max_length=32, verbose_name='application name'),
                ),
                (
                    'url',
                    models.URLField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='application url',
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='owner',
                    ),
                ),
            ],
            options={
                'verbose_name': 'application',
                'verbose_name_plural': 'applications',
                'db_table': 'launchbox_application',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'body_html',
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='content body html',
                    ),
                ),
                ('is_draft', models.BooleanField(default=True, verbose_name='draft')),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='owner',
                    ),
                ),
            ],
            options={
                'verbose_name': 'content',
                'verbose_name_plural': 'contents',
                'db_table': 'launchbox_content',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                ('title', models.CharField(max_length=64, verbose_name='page title')),
                ('slug', models.SlugField(max_length=64, verbose_name='page slug')),
                (
                    'is_inherited',
                    models.BooleanField(
                        default=True, verbose_name='inherited from parent'
                    ),
                ),
                (
                    'published_at',
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='publish date and time',
                    ),
                ),
                (
                    'closed_at',
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='close date and time',
                    ),
                ),
                (
                    'application',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pages',
                        to='content.application',
                        verbose_name='application',
                    ),
                ),
                (
                    'closed_by',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user who close',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page',
                'verbose_name_plural': 'pages',
                'db_table': 'launchbox_page',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageLabel',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name='deletion date and time',
                    ),
                ),
                ('name', models.CharField(max_length=32, verbose_name='label name')),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='owner',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page label',
                'verbose_name_plural': 'page labels',
                'db_table': 'launchbox_page_label',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                ('name', models.CharField(max_length=32, verbose_name='service name')),
                (
                    'slug',
                    models.SlugField(
                        max_length=32, unique=True, verbose_name='service slug'
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='service owner',
                    ),
                ),
                (
                    'site',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='service',
                        to='sites.site',
                        verbose_name='service site',
                    ),
                ),
            ],
            options={
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
                'db_table': 'launchbox_service',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ServiceToken',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'issued_at',
                    models.DateTimeField(verbose_name='issued date and time'),
                ),
                (
                    'expires_at',
                    models.DateTimeField(verbose_name='expiry date and time'),
                ),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tokens',
                        to='content.service',
                        verbose_name='service',
                    ),
                ),
            ],
            options={
                'verbose_name': 'service token',
                'verbose_name_plural': 'service tokens',
                'db_table': 'launchbox_service_token',
                'ordering': ('-issued_at',),
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name='deletion date and time',
                    ),
                ),
                (
                    'user_identifier',
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name='user identifier',
                    ),
                ),
                (
                    'value',
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name='value'
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page view',
                'verbose_name_plural': 'page views',
                'db_table': 'launchbox_page_view',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageShow',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'user_identifier',
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name='user identifier',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page show',
                'verbose_name_plural': 'page shows',
                'db_table': 'launchbox_page_show',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageReaction',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'user_identifier',
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name='user identifier',
                    ),
                ),
                ('type', models.SlugField(verbose_name='reaction type')),
                (
                    'message',
                    models.TextField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='reaction message',
                    ),
                ),
                (
                    'value',
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='reaction value',
                    ),
                ),
                (
                    'meta',
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='reaction meta',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='children',
                        to='content.pagereaction',
                        verbose_name='parent',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page reaction',
                'verbose_name_plural': 'page reactions',
                'db_table': 'launchbox_page_reaction',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageMetaItem',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                ('name', models.CharField(max_length=32, verbose_name='meta name')),
                (
                    'value_html',
                    models.TextField(
                        blank=True, default=None, null=True, verbose_name='meta html'
                    ),
                ),
                (
                    'value_json',
                    models.JSONField(
                        blank=True, default=None, null=True, verbose_name='meta json'
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='owner',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='meta_items',
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page meta item',
                'verbose_name_plural': 'page meta items',
                'db_table': 'launchbox_page_meta_item',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageLike',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name='deletion date and time',
                    ),
                ),
                (
                    'user_identifier',
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name='user identifier',
                    ),
                ),
                (
                    'value',
                    models.IntegerField(
                        blank=True, default=None, null=True, verbose_name='value'
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page like',
                'verbose_name_plural': 'page likes',
                'db_table': 'launchbox_page_like',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageLabelType',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name='deletion date and time',
                    ),
                ),
                ('name', models.CharField(max_length=32, verbose_name='type name')),
                (
                    'slug',
                    models.SlugField(
                        max_length=32, unique=True, verbose_name='type slug'
                    ),
                ),
                (
                    'max_per_page',
                    models.PositiveIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name='the numbers of max labelings per page',
                    ),
                ),
                (
                    'application',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='content.application',
                        verbose_name='application',
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='owner',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page label type',
                'verbose_name_plural': 'page label types',
                'db_table': 'launchbox_page_label_type',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageLabeling',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'label',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.pagelabel',
                        verbose_name='label',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page labeling',
                'verbose_name_plural': 'page labelings',
                'db_table': 'launchbox_page_labeling',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='pagelabel',
            name='type',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='content.pagelabeltype',
                verbose_name='label type',
            ),
        ),
        migrations.CreateModel(
            name='PageFollow',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'deleted_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name='deletion date and time',
                    ),
                ),
                (
                    'user_identifier',
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name='user identifier',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page follow',
                'verbose_name_plural': 'page follows',
                'db_table': 'launchbox_page_follow',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PageContentRelation',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'content',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='content.content',
                        verbose_name='content',
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='content.page',
                        verbose_name='page',
                    ),
                ),
            ],
            options={
                'verbose_name': 'page content relation',
                'verbose_name_plural': 'page content relations',
                'db_table': 'launchbox_page_content',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='page',
            name='contents',
            field=models.ManyToManyField(
                blank=True,
                related_name='pages',
                through='content.PageContentRelation',
                to='content.content',
                verbose_name='contents',
            ),
        ),
        migrations.AddField(
            model_name='page',
            name='owner',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='+',
                to=settings.AUTH_USER_MODEL,
                verbose_name='owner',
            ),
        ),
        migrations.AddField(
            model_name='page',
            name='parent',
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='child_pages',
                to='content.page',
                verbose_name='parent page',
            ),
        ),
        migrations.AddField(
            model_name='page',
            name='published_by',
            field=models.ForeignKey(
                blank=True,
                default=None,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to=settings.AUTH_USER_MODEL,
                verbose_name='user who publish',
            ),
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                ('name', models.CharField(max_length=64, verbose_name='file name')),
                (
                    'file',
                    models.FileField(
                        upload_to=launchbox.content.models.mediafile.MediaFile.get_upload_to,
                        verbose_name='file',
                    ),
                ),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='content.service',
                        verbose_name='service',
                    ),
                ),
                (
                    'uploaded_by',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user who uploaded',
                    ),
                ),
            ],
            options={
                'verbose_name': 'media file',
                'verbose_name_plural': 'media files',
                'db_table': 'launchbox_media_file',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='content',
            name='service',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='content.service',
                verbose_name='service',
            ),
        ),
        migrations.CreateModel(
            name='ApplicationToken',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'issued_at',
                    models.DateTimeField(verbose_name='issued date and time'),
                ),
                (
                    'expires_at',
                    models.DateTimeField(verbose_name='expiry date and time'),
                ),
                (
                    'application',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tokens',
                        to='content.application',
                        verbose_name='application',
                    ),
                ),
            ],
            options={
                'verbose_name': 'application token',
                'verbose_name_plural': 'application tokens',
                'db_table': 'launchbox_application_token',
                'ordering': ('-issued_at',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationAdminUser',
            fields=[
                (
                    'id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='uuid primary key',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        verbose_name='creation date and time',
                    ),
                ),
                (
                    'updated_at',
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        verbose_name='update date and time',
                    ),
                ),
                (
                    'application',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='admin_users',
                        to='content.application',
                        verbose_name='application',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='admin_applications',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'application admin user',
                'verbose_name_plural': 'application admin users',
                'db_table': 'launchbox_application_admin_user',
                'ordering': ('application', 'user'),
            },
        ),
        migrations.AddField(
            model_name='application',
            name='service',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='applications',
                to='content.service',
                verbose_name='service',
            ),
        ),
        migrations.AddConstraint(
            model_name='pagelabeling',
            constraint=models.UniqueConstraint(
                fields=('page', 'label'), name='unique_label_per_page'
            ),
        ),
        migrations.AddConstraint(
            model_name='pagelabel',
            constraint=models.UniqueConstraint(
                fields=('type', 'name'), name='unique_name_per_type'
            ),
        ),
        migrations.AddConstraint(
            model_name='pagecontentrelation',
            constraint=models.UniqueConstraint(
                fields=('page', 'content'), name='unique_content_per_page'
            ),
        ),
        migrations.AddConstraint(
            model_name='page',
            constraint=models.CheckConstraint(
                check=models.Q(
                    ('published_at__isnull', False),
                    ('closed_at__isnull', True),
                    _connector='OR',
                ),
                name='published_at_is_none_then_closed_at_is_none',
            ),
        ),
        migrations.AddConstraint(
            model_name='page',
            constraint=models.CheckConstraint(
                check=models.Q(
                    ('published_at__lt', models.F('closed_at')),
                    ('published_at__isnull', True),
                    ('closed_at__isnull', True),
                    _connector='OR',
                ),
                name='published_at_is_before_closed_at',
            ),
        ),
        migrations.AddConstraint(
            model_name='applicationadminuser',
            constraint=models.UniqueConstraint(
                fields=('application', 'user'), name='unique_user_per_application'
            ),
        ),
    ]
